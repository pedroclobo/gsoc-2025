from pygments.lexer import RegexLexer, include, words
from pygments.token import (
    Name,
    String,
    Whitespace,
    Comment,
    Number,
    Punctuation,
    Keyword,
)


class LLVMLexer(RegexLexer):
    """
    For LLVM assembly code.
    """

    name = "LLVM"
    url = "https://llvm.org/docs/LangRef.html"
    aliases = ["llvm"]
    filenames = ["*.ll"]
    mimetypes = ["text/x-llvm"]
    version_added = ""

    #: optional Comment or Whitespace
    string = r'"[^"]*?"'
    identifier = r"([-a-zA-Z$._][\w\-$.]*|" + string + ")"
    block_label = r"(" + identifier + r"|(\d+))"

    tokens = {
        "root": [
            include("whitespace"),
            # Before keywords, because keywords are valid label names :(...
            (block_label + r"\s*:", Name.Label),
            include("keyword"),
            (r"%" + identifier, Name.Variable),
            (r"@" + identifier, Name.Variable.Global),
            (r"%\d+", Name.Variable.Anonymous),
            (r"@\d+", Name.Variable.Global),
            (r"#\d+", Name.Variable.Global),
            (r"!" + identifier, Name.Variable),
            (r"!\d+", Name.Variable.Anonymous),
            (r"c?" + string, String),
            (r"0[xX][KLMHR]?[a-fA-F0-9]+", Number),
            (r"-?\d+(?:[.]\d+)?(?:[eE][-+]?\d+(?:[.]\d+)?)?", Number),
            (r"[=<>{}\[\]()*.,!]|x\b", Punctuation),
        ],
        "whitespace": [(r"(\n|\s+)+", Whitespace), (r";.*?\n", Comment)],
        "keyword": [
            # Regular keywords
            (
                words(
                    (
                        "aarch64_sve_vector_pcs",
                        "aarch64_vector_pcs",
                        "acq_rel",
                        "acquire",
                        "add",
                        "addrspace",
                        "addrspacecast",
                        "afn",
                        "alias",
                        "aliasee",
                        "align",
                        "alignLog2",
                        "alignstack",
                        "alloca",
                        "allocsize",
                        "allOnes",
                        "alwaysinline",
                        "alwaysInline",
                        "amdgpu_cs",
                        "amdgpu_es",
                        "amdgpu_gfx",
                        "amdgpu_gs",
                        "amdgpu_hs",
                        "amdgpu_kernel",
                        "amdgpu_ls",
                        "amdgpu_ps",
                        "amdgpu_vs",
                        "and",
                        "any",
                        "anyregcc",
                        "appending",
                        "arcp",
                        "argmemonly",
                        "args",
                        "arm_aapcs_vfpcc",
                        "arm_aapcscc",
                        "arm_apcscc",
                        "ashr",
                        "asm",
                        "atomic",
                        "atomicrmw",
                        "attributes",
                        "available_externally",
                        "avr_intrcc",
                        "avr_signalcc",
                        "bit",
                        "bitcast",
                        "bitMask",
                        "blockaddress",
                        "blockcount",
                        "br",
                        "branchFunnel",
                        "builtin",
                        "byArg",
                        "byref",
                        "byte",
                        "bytecast",
                        "byteArray",
                        "byval",
                        "c",
                        "call",
                        "callbr",
                        "callee",
                        "caller",
                        "calls",
                        "canAutoHide",
                        "catch",
                        "catchpad",
                        "catchret",
                        "catchswitch",
                        "cc",
                        "ccc",
                        "cfguard_checkcc",
                        "cleanup",
                        "cleanuppad",
                        "cleanupret",
                        "cmpxchg",
                        "cold",
                        "coldcc",
                        "comdat",
                        "common",
                        "constant",
                        "contract",
                        "convergent",
                        "critical",
                        "cxx_fast_tlscc",
                        "datalayout",
                        "declare",
                        "default",
                        "define",
                        "deplibs",
                        "dereferenceable",
                        "dereferenceable_or_null",
                        "distinct",
                        "dllexport",
                        "dllimport",
                        "dso_local",
                        "dso_local_equivalent",
                        "dso_preemptable",
                        "dsoLocal",
                        "eq",
                        "exact",
                        "exactmatch",
                        "extern_weak",
                        "external",
                        "externally_initialized",
                        "extractelement",
                        "extractvalue",
                        "fadd",
                        "false",
                        "fast",
                        "fastcc",
                        "fcmp",
                        "fdiv",
                        "fence",
                        "filter",
                        "flags",
                        "fmul",
                        "fneg",
                        "fpext",
                        "fptosi",
                        "fptoui",
                        "fptrunc",
                        "freeze",
                        "frem",
                        "from",
                        "fsub",
                        "funcFlags",
                        "function",
                        "gc",
                        "getelementptr",
                        "ptradd",
                        "ghccc",
                        "global",
                        "guid",
                        "gv",
                        "hash",
                        "hhvm_ccc",
                        "hhvmcc",
                        "hidden",
                        "hot",
                        "hotness",
                        "icmp",
                        "ifunc",
                        "inaccessiblemem_or_argmemonly",
                        "inaccessiblememonly",
                        "inalloca",
                        "inbounds",
                        "indir",
                        "indirectbr",
                        "info",
                        "initialexec",
                        "inline",
                        "inlineBits",
                        "inlinehint",
                        "inrange",
                        "inreg",
                        "insertelement",
                        "insertvalue",
                        "insts",
                        "intel_ocl_bicc",
                        "inteldialect",
                        "internal",
                        "inttoptr",
                        "invoke",
                        "jumptable",
                        "kind",
                        "landingpad",
                        "largest",
                        "linkage",
                        "linkonce",
                        "linkonce_odr",
                        "live",
                        "load",
                        "local_unnamed_addr",
                        "localdynamic",
                        "localexec",
                        "lshr",
                        "max",
                        "metadata",
                        "min",
                        "minsize",
                        "module",
                        "monotonic",
                        "msp430_intrcc",
                        "mul",
                        "mustprogress",
                        "musttail",
                        "naked",
                        "name",
                        "nand",
                        "ne",
                        "nest",
                        "ninf",
                        "nnan",
                        "noalias",
                        "nobuiltin",
                        "nocallback",
                        "nocapture",
                        "nocf_check",
                        "noduplicate",
                        "noduplicates",
                        "nofree",
                        "noimplicitfloat",
                        "noinline",
                        "noInline",
                        "nomerge",
                        "none",
                        "nonlazybind",
                        "nonnull",
                        "noprofile",
                        "norecurse",
                        "noRecurse",
                        "noredzone",
                        "noreturn",
                        "nosync",
                        "notail",
                        "notEligibleToImport",
                        "noundef",
                        "nounwind",
                        "nsw",
                        "nsz",
                        "null",
                        "null_pointer_is_valid",
                        "nuw",
                        "oeq",
                        "offset",
                        "oge",
                        "ogt",
                        "ole",
                        "olt",
                        "one",
                        "opaque",
                        "optforfuzzing",
                        "optnone",
                        "optsize",
                        "or",
                        "ord",
                        "param",
                        "params",
                        "partition",
                        "path",
                        "personality",
                        "phi",
                        "poison",
                        "preallocated",
                        "prefix",
                        "preserve_allcc",
                        "preserve_mostcc",
                        "private",
                        "prologue",
                        "protected",
                        "ptr_provenance",
                        "ptrtoint",
                        "ptx_device",
                        "ptx_kernel",
                        "readnone",
                        "readNone",
                        "readonly",
                        "readOnly",
                        "reassoc",
                        "refs",
                        "relbf",
                        "release",
                        "resByArg",
                        "resume",
                        "ret",
                        "returnDoesNotAlias",
                        "returned",
                        "returns_twice",
                        "safestack",
                        "samesize",
                        "sanitize_address",
                        "sanitize_hwaddress",
                        "sanitize_memory",
                        "sanitize_memtag",
                        "sanitize_thread",
                        "sdiv",
                        "section",
                        "select",
                        "seq_cst",
                        "sext",
                        "sge",
                        "sgt",
                        "shadowcallstack",
                        "shl",
                        "shufflevector",
                        "sideeffect",
                        "signext",
                        "single",
                        "singleImpl",
                        "singleImplName",
                        "sitofp",
                        "sizeM1",
                        "sizeM1BitWidth",
                        "sle",
                        "slt",
                        "source_filename",
                        "speculatable",
                        "speculative_load_hardening",
                        "spir_func",
                        "spir_kernel",
                        "splat",
                        "srem",
                        "sret",
                        "ssp",
                        "sspreq",
                        "sspstrong",
                        "store",
                        "strictfp",
                        "sub",
                        "summaries",
                        "summary",
                        "swiftcc",
                        "swifterror",
                        "swiftself",
                        "switch",
                        "syncscope",
                        "tail",
                        "tailcc",
                        "target",
                        "thread_local",
                        "to",
                        "token",
                        "triple",
                        "true",
                        "trunc",
                        "type",
                        "typeCheckedLoadConstVCalls",
                        "typeCheckedLoadVCalls",
                        "typeid",
                        "typeidCompatibleVTable",
                        "typeIdInfo",
                        "typeTestAssumeConstVCalls",
                        "typeTestAssumeVCalls",
                        "typeTestRes",
                        "typeTests",
                        "udiv",
                        "ueq",
                        "uge",
                        "ugt",
                        "uitofp",
                        "ule",
                        "ult",
                        "umax",
                        "umin",
                        "undef",
                        "une",
                        "uniformRetVal",
                        "uniqueRetVal",
                        "unknown",
                        "unnamed_addr",
                        "uno",
                        "unordered",
                        "unreachable",
                        "unsat",
                        "unwind",
                        "urem",
                        "uselistorder",
                        "uselistorder_bb",
                        "uwtable",
                        "va_arg",
                        "varFlags",
                        "variable",
                        "vcall_visibility",
                        "vFuncId",
                        "virtFunc",
                        "virtualConstProp",
                        "void",
                        "volatile",
                        "vscale",
                        "vTableFuncs",
                        "weak",
                        "weak_odr",
                        "webkit_jscc",
                        "win64cc",
                        "within",
                        "wpdRes",
                        "wpdResolutions",
                        "writeonly",
                        "x",
                        "x86_64_sysvcc",
                        "x86_fastcallcc",
                        "x86_intrcc",
                        "x86_mmx",
                        "x86_regcallcc",
                        "x86_stdcallcc",
                        "x86_thiscallcc",
                        "x86_vectorcallcc",
                        "xchg",
                        "xor",
                        "zeroext",
                        "zeroinitializer",
                        "zext",
                        "immarg",
                        "willreturn",
                    ),
                    suffix=r"\b",
                ),
                Keyword,
            ),
            # Types
            (
                words(
                    (
                        "void",
                        "half",
                        "bfloat",
                        "float",
                        "double",
                        "fp128",
                        "x86_fp80",
                        "ppc_fp128",
                        "label",
                        "metadata",
                        "x86_mmx",
                        "x86_amx",
                        "token",
                        "ptr",
                    )
                ),
                Keyword.Type,
            ),
            # Integer types
            (r"i[1-9]\d*", Keyword.Type),
            # Byte types
            (r"b[1-9]\d*", Keyword.Type),
        ],
    }

